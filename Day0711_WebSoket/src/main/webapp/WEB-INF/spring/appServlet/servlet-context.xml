<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet`s request-processing 
		infrastructure -->
		
	<context:component-scan	base-package="controller" />
	<context:component-scan	base-package="service" />
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver">
	</bean>
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<!-- 웹소켓 -->
<!-- 	<websocket:handlers> -->
<!-- 		<websocket:mapping handler="myHandler" path="/chat"/> -->
<!-- 		<websocket:handshake-interceptors> -->
<!-- 			<bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"></bean> -->
<!-- 		</websocket:handshake-interceptors> -->
<!-- 		<websocket:sockjs/> -->
<!-- 	</websocket:handlers> -->

	<!-- sock.js 와 stomp.js 를 이용한 websocket 연결설정 -->
	<websocket:message-broker application-destination-prefix="/client">
		<websocket:stomp-endpoint path="/chat">
			<websocket:sockjs></websocket:sockjs>
		</websocket:stomp-endpoint>
		<websocket:simple-broker prefix="/topic"/>
	</websocket:message-broker>
	
</beans>